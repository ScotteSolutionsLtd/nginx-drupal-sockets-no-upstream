location / {

	# Uncomment to send 404 errors back to Drupal. Overridable by putting this directive in individual site .conf files.
    ## error_page 404 /index.php;

    location ^~ /system/files/ {
        ## Include the specific FastCGI configuration. This is for a
        ## FCGI backend like php-cgi or php-fpm.
        include fastcgi_private_files.conf;

        ## If proxying to apache comment the two lines above and
        ## uncomment the line below.
        #proxy_pass http://phpapache/index.php?q=$uri;

        ## For not signaling a 404 in the error log whenever the
        ## system/files directory is accessed add the line below.
        ## Note that the 404 is the intended behavior.
        #log_not_found off;
    }

    ## Trying to access private files directly returns a 404.
    location ^~ /sites/default/files/private/ {
        internal;
    }

    ## Drupal 7 image handling, i.e., imagecache in core. See:
    ## https://drupal.org/node/371374.
    location ~* /files/styles/ {
        ## Image hotlinking protection. If you want hotlinking
        ## protection for your images uncomment the following line.
        include /etc/nginx/hotlinking_protection.conf;
        access_log off;
        expires 30d;
        try_files $uri @drupal;
    }

    ## Advanced Aggregation module CSS
    ## support. http://drupal.org/project/advagg.
    location ^~ /sites/default/files/advagg_css/ {
        location ~* /sites/default/files/advagg_css/css_[[:alnum:]]+\.css$ {
            access_log off;
            add_header Pragma '';
            add_header Cache-Control 'public, max-age=946080000';
            add_header Accept-Ranges '';
            try_files $uri @drupal;
        }
    }

    ## Advanced Aggregation module JS
    ## support. http://drupal.org/project/advagg.
    location ^~ /sites/default/files/advagg_js/ {
        location ~* /sites/default/files/advagg_js/js_[[:alnum:]]+\.js$ {
            access_log off;
            add_header Pragma '';
            add_header Cache-Control 'public, max-age=946080000';
            add_header Accept-Ranges '';
            try_files $uri @drupal;
        }
    }

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|ico|png|html|xml)$ {
        access_log off;
        expires 30d;
        ## No need to bleed constant updates. Send everything:
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    ## PDFs and powerpoint files handling.
    location ~* ^.+\.(?:pdf|pptx?)$ {
	    ## Send everything immediately and tell them it's good for a month.
        expires 30d;
        tcp_nodelay off;
    }

    ## MP3 and Ogg/Vorbis files are served using AIO when supported. Your OS must support it.
    location ^~ /sites/default/files/audio/mp3 {
        location ~* ^/sites/default/files/audio/mp3/.*\.mp3$ {
            directio 4k; # for XFS
            ## If you're using ext3 or similar uncomment the line below and comment the above.
            #directio 512; # for ext3 or similar (block alignments)
            tcp_nopush off;
            aio on;
            output_buffers 1 2M;
        }
    }

    location ^~ /sites/default/files/audio/ogg {
        location ~* ^/sites/default/files/audio/ogg/.*\.ogg$ {
            directio 4k; # for XFS
            ## If you're using ext3 or similar uncomment the line below and comment the above.
            #directio 512; # for ext3 or similar (block alignments)
            tcp_nopush off;
            aio on;
            output_buffers 1 2M;
        }
    }

    ## Pseudo streaming of FLV files:
    ## http://wiki.nginx.org/HttpFlvStreamModule.
    ## If pseudo streaming isn't working, try to comment
    ## out line 35 in nginx.conf:
    ## add_header X-Frame-Options SAMEORIGIN;
    location ^~ /sites/default/files/video/flv {
        location ~* ^/sites/default/files/video/flv/.*\.flv$ {
            flv;
        }
    }

    ## Pseudo streaming of H264/AAC files. This requires an Nginx
    ## version greater or equal to 1.0.7 for the stable branch and
    ## greater or equal to 1.1.3 for the development branch.
    ## Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
    location ^~ /sites/default/files/video/mp4 { # videos
        location ~* ^/sites/default/files/video/mp4/.*\.(?:mp4|mov)$ {
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 5M;
        }
    }

    location ^~ /sites/default/files/audio/m4a { # audios
        location ~* ^/sites/default/files/audio/m4a/.*\.m4a$ {
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 5M;
        }
    }

    ## Advanced Help module makes each module provided README available.
    location ^~ /help/ {
        location ~* ^/help/[^/]*/README\.txt$ {
		## Include the specific FastCGI configuration. This is for a
		## FCGI backend like php-cgi or php-fpm.
		include fastcgi_private_files.conf;

            ## If proxying to apache comment the two lines above and
            ## uncomment the line below.
            #proxy_pass http://phpapache/index.php?q=$uri;
        }
    }
	
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }
	
	# Allow these files to certain IPs
	location ~* ^/(index|update|install|test|authorize|xmlrpc).php$ {
		fastcgi_pass   $php_socket;
		
		# Here you can block by IP or HTTP basic auth
		# auth_basic "Restricted Access"; # auth realm
		# auth_basic_user_file .htpasswd-users; # htpasswd file
		include ips_allowed.conf;
		include fastcgi_private_files.conf;
	}

    ## First we try the URI and relay to the /index.php?q=$uri&$args if not found.
    try_files $uri @drupal;
}

location @drupal {
    fastcgi_pass $php_socket;
    include fastcgi_drupal.conf;
    ## FastCGI microcache.
    #include apps/drupal/microcache_fcgi.conf;
    ## FCGI microcache for authenticated users also.
    #include apps/drupal/microcache_fcgi_auth.conf;

    ## Proxy microcache.
    #include apps/drupal/microcache_proxy.conf;
    ## Proxy microcache for authenticated users also.
    #include apps/drupal/microcache_proxy_auth.conf;

    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NginxUploadProgress modules.
    #track_uploads uploads 60s;
}

location @drupal-no-args {

    fastcgi_pass $php_socket;
    include fastcgi_private_files.conf;
    ## FastCGI microcache.
    #include apps/drupal/microcache_fcgi.conf;
    ## FCGI microcache for authenticated users also.
    #include apps/drupal/microcache_fcgi_auth.conf;

    ## Proxy microcache.
    #include apps/drupal/microcache_proxy.conf;
    ## Proxy microcache for authenticated users also.
    #include apps/drupal/microcache_proxy_auth.conf;
}

## Disallow access to .git directory: return 404 as not to disclose
## information.
location ^~ /.git {
    return 404;
}

## Disallow access to patches directory.
location ^~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location ^~ /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri @drupal-no-args;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @drupal-no-args;
}

## Support for favicon. Return an 1x1 transparent GIF if it doesn't
## exist.
location = /favicon.ico {
    expires 30d;
    try_files /favicon.ico @empty;
}

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}
